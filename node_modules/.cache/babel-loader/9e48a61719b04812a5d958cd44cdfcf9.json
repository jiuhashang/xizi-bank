{"remainingRequest":"C:\\Users\\ylf\\Desktop\\xizi - bank\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ylf\\Desktop\\xizi - bank\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\ylf\\Desktop\\xizi - bank\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ylf\\Desktop\\xizi - bank\\src\\components\\GlobalComponents\\FileUpload\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ylf\\Desktop\\xizi - bank\\src\\components\\GlobalComponents\\FileUpload\\index.vue","mtime":1645171713969},{"path":"C:\\Users\\ylf\\Desktop\\xizi - bank\\babel.config.js","mtime":1642644134550},{"path":"C:\\Users\\ylf\\Desktop\\xizi - bank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1668673146435},{"path":"C:\\Users\\ylf\\Desktop\\xizi - bank\\node_modules\\babel-loader\\lib\\index.js","mtime":1668673148088},{"path":"C:\\Users\\ylf\\Desktop\\xizi - bank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1668673146435},{"path":"C:\\Users\\ylf\\Desktop\\xizi - bank\\node_modules\\vue-loader\\lib\\index.js","mtime":1668673148087}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;AAiCA;AACA;AACA;AAEA;EAEAA;IACA;IACAC;MACAC;MACA;MACAC;IACA;IAEA;IACAC;MACAF;MACAC;IACA;IAEA;IACAE;MACAH;MACAC;IACA;IAEA;IACAG;MACAJ;MACAC;IACA;IAEA;IACAI;MACAL;MACAC;QACA;UACA;QAAA,CACA;MACA;IACA;IAEA;IACAK;MACAN;MACAC;IACA;IAEA;IACAM;MACAP;MACAC;QACA;MACA;IACA;IAEA;IACAO;MACAR;MACAC;IACA;IAEAQ;MACAT;MACAC;IACA;IAEAS;MACAV;MACAC;IACA;EACA;EACAI;IACA;MACA;MACAM;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;QACA;MACA;IACA;EACA;EACAC;IACA;IACAC;MACA;MACA;;MAEA;MACA;QACA;MACA;;MAEA;MACA;QACA;MACA;;MAEA;MACA;QACA;QACA;UACA;UACA;YACAA;UACA;UACA;QACA;UACA;UACAA;UACA;QACA;MACA;;MAEA;MACA;QACA;QACA;UACA;UACAC;UACA;YACAD;UACA;QACA;UACA;UACAA;QACA;UACA;UACA;UACAE;UACA;QACA;MACA;MACA;IACA;IAEA;IACAC;MACA;IACA;IAEA;IACAC;MACA;IACA;IAEA;IACAC;MACA;IACA;EACA;EACAC;IACA;IACAH;MACAI;QACA;UACA;YACA;UACA;QACA;UACA;YACA;UACA;QACA;MACA;MACAC;MACAC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;;EACAC,WACA;EACAC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAC;MACA;IACA;IAEA;IACAC;MACA;IACA;IAEA;IACAC;MACA;MACA;MACA;MACA;QACAC;MACA;MACA;MACAC;QACA5B;MACA;MACA;MACA;MACA;MACA;IACA;IAEA;IACA6B;MACA;MACA;MACA;MACA;QACAF;MACA;MACA;MACAC;MACA;MACA;MACA;MACA;IACA;IAEA;IACAE;MACA;IAAA,CACA;IAEAC;MACA;IACA;IAEA;IACAC;MACA;IACA;IAEA;IACAC;MACA;QACA;QACA;UACAC;QACA;MACA;IACA;IAEA;IACAC;MACA;MACA;MACAC;IACA;IAEA;IACAC;MACA;MACA;MACA;MACA;MACA;MACAC;MACA;MACA;MACAC;QACAC;QACAb;UAAA;YAAAc;YAAAD;UAAA;QAAA;QACAC;QACAC;MACA;MACA;IACA;IACAC;MACA;QAAA;QACA;QACAC;MACA;IACA;EACA;AACA","names":["props","action","type","default","multiple","showFileList","limit","data","accept","fileList","fileKey","text","disabled","baseUrl","videoUrl","dialogVisible","currentList","headers","computed","files","item","error","listLength","filesLength","uploadUrl","watch","handler","immediate","deep","mounted","methods","beforeUpload","beforeRemove","handleImgRemove","response","array","uploadSuccess","change","progress","exceed","hidePictureCardUpload","el","showPictureCardUpload","nodes","pathToFile","fileName","file","url","name","status","handlePreview","window"],"sourceRoot":"src/components/GlobalComponents/FileUpload","sources":["index.vue"],"sourcesContent":["<template>\r\n  <div class=\"custom-upload\">\r\n    <el-upload\r\n      ref=\"imageUpload\"\r\n      :action=\"uploadUrl\"\r\n      :data=\"data\"\r\n      :headers=\"headers\"\r\n      :accept=\"accept\"\r\n      :before-remove=\"beforeRemove\"\r\n      :before-upload=\"beforeUpload\"\r\n      :on-remove=\"(file,filelist)=>{return handleImgRemove(file,filelist)}\"\r\n      :on-success=\"(res,file,filelist)=>{return uploadSuccess(res,file,filelist)}\"\r\n      :on-progress=\"progress\"\r\n      :on-exceed=\"exceed\"\r\n      :on-change=\"change\"\r\n      :show-file-list=\"showFileList\"\r\n      :limit=\"limit\"\r\n      :multiple=\"multiple\"\r\n      :file-list=\"files\"\r\n      :disabled=\"disabled\"\r\n      :on-preview=\"handlePreview\"\r\n    >\r\n      <!-- <slot>\r\n        <el-button ref=\"uploadBtn\" type=\"primary\">{{ text }}</el-button>\r\n      </slot> -->\r\n    </el-upload>\r\n    <!-- <el-dialog :close-on-click-modal=\"false\" :visible.sync=\"dialogVisible\" :append-to-body=\"true\">\r\n      <video :src=\"videoUrl\" class=\"video\" controls=\"controls\"/>\r\n    </el-dialog> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport nth from 'lodash/nth'\r\nimport split from 'lodash/split'\r\nimport { getToken } from '@/utils/auth'\r\n\r\nexport default {\r\n\r\n  props: {\r\n    // 视频上传的接口地址\r\n    action: {\r\n      type: String,\r\n      // default: process.env.VUE_APP_BASE_API + '/huawei/uploadFile'\r\n      default: 'http://123.60.52.140:7800/huawei/uploadFile'\r\n    },\r\n\r\n    // 组件是否支持多选上传(默认不支持)\r\n    multiple: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n\r\n    //  是否显示文件列表(默认显示)\r\n    showFileList: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n\r\n    // 上传视频的数量限制\r\n    limit: {\r\n      type: Number,\r\n      default: 1\r\n    },\r\n\r\n    // 上传额外带的参数\r\n    data: {\r\n      type: Object,\r\n      default() {\r\n        return {\r\n          // 'priFix': 'adminFile'\r\n        }\r\n      }\r\n    },\r\n\r\n    // 允许上传的文件类型\r\n    accept: {\r\n      type: String,\r\n      default: '.*'\r\n    },\r\n\r\n    // 文件缩略图列表(该数组的每一项只能是字符串或者对象)\r\n    fileList: {\r\n      type: [Array, String],\r\n      default() {\r\n        return []\r\n      }\r\n    },\r\n\r\n    // 如果fileList有数组项是对象则指定对象的一个属性作为文件对象url属性值(默认是该对象的url属性表示文件路径)\r\n    fileKey: {\r\n      type: String,\r\n      default: 'url'\r\n    },\r\n\r\n    text: {\r\n      type: String,\r\n      default: '上传'\r\n    },\r\n\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      // baseUrl: this.$config.baseUrl,\r\n      baseUrl: process.env.VUE_APP_IMAGE_URL,\r\n      videoUrl: '', // 当前查看视频的路径\r\n      dialogVisible: false, // 视频查看框的显示状态\r\n      currentList: [], // 已上传的文件\r\n      headers: {\r\n        'token': getToken()\r\n      },\r\n    }\r\n  },\r\n  computed: {\r\n    // 计算组件需要展示的文件缩略图列表数据\r\n    files() {\r\n      // 缩略图列表\r\n      const files = []\r\n\r\n      // 如果父组件没有传入缩略图列表数据\r\n      if (this.fileList.length === 0) {\r\n        return []\r\n      }\r\n\r\n      // 如果父组件没有传入缩略图列表数据\r\n      if (typeof (this.fileList) === 'string' && this.fileList === '') {\r\n        return []\r\n      }\r\n\r\n      // 若父组件传入了一个字符串作为缩略图列表的显示数据\r\n      if (typeof (this.fileList) === 'string') {\r\n        // 判断该字符串是否是由多张图片的地址拼接而成\r\n        if (this.fileList.includes(',')) {\r\n          const fileList = this.fileList.split(',')\r\n          for (const file of fileList) {\r\n            files.push(this.pathToFile(file))\r\n          }\r\n          return files\r\n        } else {\r\n          // 将其作为数组项加入数组并直接返回结果\r\n          files.push(this.pathToFile(this.fileList))\r\n          return files\r\n        }\r\n      }\r\n\r\n      // 若父组件传入缩略图列表的显示数据是一个数组\r\n      for (let item of this.fileList) {\r\n        // 判断传入的数组每一项是否是一个字符串\r\n        if (typeof (item) === 'string') {\r\n          // 将字符串转成数组(处理/单个数组项/为多张图片的地址拼接,并以逗号分隔的字符串/的情况)\r\n          item = item.split(',')\r\n          for (const file of item) {\r\n            files.push(this.pathToFile(file))\r\n          }\r\n        } else if (typeof (item) === 'object') {\r\n          // 如果数组的每一项是对象,则指定对象的一个属性作为文件对象url属性值\r\n          files.push(this.pathToFile(item[this.fileKey]))\r\n        } else {\r\n          const error = new Error()\r\n          // 数组中某些项的数据类型不正确(既不是String也不是Object)\r\n          error.message = 'Incorrect data type for some items in the array!'\r\n          throw (error)\r\n        }\r\n      }\r\n      return files\r\n    },\r\n\r\n    // 已上传的文件数量\r\n    listLength() {\r\n      return this.currentList.length\r\n    },\r\n\r\n    // 初始的文件数量\r\n    filesLength() {\r\n      return this.files.length\r\n    },\r\n\r\n    // 图片上传的接口地址\r\n    uploadUrl() {\r\n      return this.action || `${this.baseUrl}`\r\n    }\r\n  },\r\n  watch: {\r\n    // 监听当前已上传文件的数量是否超过限制数量(控制上传按钮的显示和隐藏)\r\n    listLength: {\r\n      handler(nv, ov) {\r\n        if (nv < this.limit) {\r\n          this.$nextTick(() => {\r\n            this.showPictureCardUpload()\r\n          })\r\n        } else {\r\n          this.$nextTick(() => {\r\n            this.hidePictureCardUpload()\r\n          })\r\n        }\r\n      },\r\n      immediate: true,\r\n      deep: true\r\n    }\r\n    //\r\n    // // 监听组件初始文件的数量是否超过限制数量(控制上传按钮的显示和隐藏)\r\n    // filesLength: {\r\n    //   handler(nv, ov) {\r\n    //     if (nv < this.limit) {\r\n    //       this.$nextTick(() => {\r\n    //         this.showPictureCardUpload()\r\n    //       })\r\n    //     } else {\r\n    //       this.$nextTick(() => {\r\n    //         this.hidePictureCardUpload()\r\n    //       })\r\n    //     }\r\n    //   },\r\n    //   immediate: true,\r\n    //   deep: true\r\n    // }\r\n  },\r\n  mounted() {\r\n  },\r\n  methods: {\r\n    // // 查看已选视频\r\n    // handlePictureCardPreview(file) {\r\n    //   console.log(file)\r\n    //   // this.dialogImageUrl = file.url // 查看视频的路径(file.response也能显示，url是文件的本地路径，response是上传服务器之后接口返回的线上地址)\r\n    //   this.videoUrl = file.response\r\n    //   this.dialogVisible = true // 显示视频查看框\r\n    //   console.log(this.videoUrl)\r\n    // },\r\n\r\n    beforeUpload() {\r\n      this.headers.token = getToken()\r\n    },\r\n\r\n    // 删除文件之前的钩子，参数为上传的文件和文件列表，若返回 false 或者返回 Promise 且被 reject，则停止删除。\r\n    beforeRemove(file, fileList) {\r\n      return this.$confirm(`确定移除 ${file.name}？`)\r\n    },\r\n\r\n    // 文件列表移除文件时的钩子\r\n    handleImgRemove(file, filelist) {\r\n      // 更新已上传的文件列表\r\n      this.currentList = filelist\r\n      // 通过数组对象的静态方法\"from\"得到剩余图片的线上地址(response)组成的数组\r\n      let array = Array.from(filelist, ({\r\n        response\r\n      }) => response)\r\n      // response为接口返回的响应体对象时,从响应体中取出图片地址再组成数组(若接口直接返回图片地址可注释此处代码)\r\n      array = Array.from(array, ({\r\n        data\r\n      }) => data)\r\n      // file:删除的文件对象; filelist:删除完成之后剩下的文件列表(删完了就是个空数组)\r\n      this.$emit('remove', array, file, filelist)\r\n      // 同时触发自定义的change事件\r\n      this.$emit('change', array, file, filelist)\r\n    },\r\n\r\n    // 上传成功\r\n    uploadSuccess(res, file, filelist) {\r\n      // 更新已上传的文件列表\r\n      this.currentList = filelist\r\n      // 通过数组对象的静态方法\"from\"得到所有视频的线上地址(response)组成的数组\r\n      let array = Array.from(filelist, ({\r\n        response\r\n      }) => response)\r\n      // response为接口返回的响应体对象时,从响应体中取出图片地址再组成数组(若接口直接返回图片地址可注释此处代码)\r\n      array = Array.from(array, (response) => response?.data)\r\n      // res:后端接口的返回值; file:上传的文件对象; filelist:上传完成之后的文件列表\r\n      this.$emit('success', array, res, file, filelist)\r\n      // 同时触发自定义的change事件\r\n      this.$emit('change', array, file, filelist)\r\n    },\r\n\r\n    // 文件状态改变时的钩子，添加文件、上传成功和上传失败时都会被调用\r\n    change(file, filelist) {\r\n      // console.log(file, filelist)\r\n    },\r\n\r\n    progress() {\r\n      this.$emit('progress')\r\n    },\r\n\r\n    // 上传文件超出个数限制时的钩子\r\n    exceed(files, filelist) {\r\n      this.$message.warning(`最多上传${this.limit}个文件`)\r\n    },\r\n\r\n    // 隐藏上传按钮\r\n    hidePictureCardUpload() {\r\n      this.$nextTick(() => {\r\n        const el = (this.$refs.imageUpload.$el || document).getElementsByClassName('el-upload--picture-card')[0]\r\n        if (el) {\r\n          el.style.display = 'none'\r\n        }\r\n      })\r\n    },\r\n\r\n    // 显示上传按钮\r\n    showPictureCardUpload() {\r\n      const nodes = this.$refs.imageUpload.$el.childNodes\r\n      const length = nodes.length\r\n      nodes[length - 1].style.display = 'inline-flex'\r\n    },\r\n\r\n    // 将文件路径字符串转为文件对象\r\n    pathToFile(str) {\r\n      let file = {}\r\n      // 使用lodash.js提供的方法获取文件名\r\n      const fileFullName = nth(split(str, '/'), -1)\r\n      // 反解析文件名\r\n      let fileName = decodeURIComponent(nth(split(fileFullName, '.')))\r\n      fileName = fileName.replace(new RegExp(`^${this.data.preFix}\\/[0-9]{13}`), '')\r\n      // 截取文件后缀\r\n      const fileSuffix = nth(split(fileFullName, '.'), -1)\r\n      file = {\r\n        url: str,\r\n        response: { 'data': { name: fileName, url: str }},\r\n        name: `${fileName}.${fileSuffix}`,\r\n        status: 'success'\r\n      }\r\n      return file\r\n    },\r\n    handlePreview(file) {\r\n      if (file.status === 'success') {\r\n        const url = file?.response?.data?.url || file?.response?.data?.data?.url\r\n        window.open(url)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}