{"remainingRequest":"C:\\Users\\ylf\\Desktop\\xizi - bank\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ylf\\Desktop\\xizi - bank\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\ylf\\Desktop\\xizi - bank\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ylf\\Desktop\\xizi - bank\\src\\components\\GlobalComponents\\ImageUpload\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ylf\\Desktop\\xizi - bank\\src\\components\\GlobalComponents\\ImageUpload\\index.vue","mtime":1642644134574},{"path":"C:\\Users\\ylf\\Desktop\\xizi - bank\\babel.config.js","mtime":1642644134550},{"path":"C:\\Users\\ylf\\Desktop\\xizi - bank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1668673146435},{"path":"C:\\Users\\ylf\\Desktop\\xizi - bank\\node_modules\\babel-loader\\lib\\index.js","mtime":1668673148088},{"path":"C:\\Users\\ylf\\Desktop\\xizi - bank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1668673146435},{"path":"C:\\Users\\ylf\\Desktop\\xizi - bank\\node_modules\\vue-loader\\lib\\index.js","mtime":1668673148087}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;AA8CA;AACA;AACA;AACA;AAEA;EACAA;IACA;IACAC;MACAC;MACAC;IACA;IACA;IACAC;MACAF;MACAC;IACA;IAEA;IACAE;MACAH;MACAC;IACA;IAEA;IACAG;MACAJ;MACAC;IACA;IAEA;IACAI;MACAL;MACAC;IACA;IAEA;IACAK;MACAN;MACAC;IACA;IAEA;IACAM;MACAP;MACAC;IACA;IAEA;IACAO;MACAR;MACAC;QACA;MACA;IACA;IAEA;IACAQ;MACAT;MACAC;IACA;IAEA;IACAS;MACAV;MACAC;IACA;IAEAU;MACAX;MACAC;IACA;IAEA;IACAW;MACAZ;MACAC;QACA;UACA;QACA;MACA;IACA;EACA;EACAW;IACA;MACAC;MACAC;QACA;MACA;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;IACA;EACA;;EACAC;IACA;IACAC;MACA;MACA;;MAEA;MACA;QACA;MACA;;MAEA;MACA;QACA;MACA;;MAEA;MACA;QACA;QACA;UACA;UACA;YACAA;UACA;UACA;QACA;UACA;UACAA;UACA;QACA;MACA;;MAEA;MACA;QACA;QACA;UACA;UACAC;UACA;YACAD;UACA;QACA;UACA;UACAA;QACA;UACA;UACA;UACAE;UACA;QACA;MACA;MACA;IACA;IAEA;IACAC;MACA;IACA;IAEA;IACAC;MACAC;MACA;IACA;IAEA;IACAC;MACA;IACA;EACA;EACAC;IACA;IACAJ;MACAK;QACA;UACA;YACA;UACA;QACA;UACA;YACA;UACA;QACA;MACA;MACAC;MACAC;IACA;IAEA;IACAN;MACAI;QACA;UACA;YACA;UACA;QACA;UACA;YACA;UACA;QACA;MACA;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;MACAC;QACAhC;QACAiC;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;MACA;IACA;IAEA;IACAC;MACA;QACA;QACA;MACA;IACA;IAEAC;MACAZ;MACA;MAEA;QACA;UACAS;UACAjC;QACA;MACA;MACA;IACA;IAEA;IACAqC;MACA;MACA;MACA;MACA;QAAAC;MAAA;MACA;MACAC;QAAA3B;MAAA;MACA;MACA;MACA;MACA;IACA;IAEA;IACA4B;MACA;MACA;MACA;MACA;QAAAF;MAAA;MACA;MACAC;MACA;MACA;MACA;MACA;IACA;IAEA;IACAE;MACA;IAAA,CACA;IAEA;IACAC;MACA;IACA;IAEA;IACAC;MACA;MACA;MACAC;IACA;IAEA;IACAC;MACA;MACA;MACAD;IACA;IAEA;IACAE;MACA;MACA;MACA;MACA;MACA;MACAC;MACA;MACA;MACAC;QACAC;QACAX;UAAA;YAAAY;YAAAD;UAAA;QAAA;QACAC;QACAC;MACA;MACA;IACA;EACA;AACA","names":["props","action","type","default","disabled","multiple","limit","accept","width","height","fileList","fileKey","margin","showFileList","data","baseUrl","headers","dialogImageUrl","dialogVisible","currentList","computed","files","item","error","listLength","filesLength","console","uploadUrl","watch","handler","immediate","deep","methods","handleError","Message","message","handlePictureCardPreview","beforeRemove","beforeAvatarUpload","handleImgRemove","response","array","uploadSuccess","change","exceed","hidePictureCardUpload","nodes","showPictureCardUpload","pathToFile","fileName","file","url","name","status"],"sourceRoot":"src/components/GlobalComponents/ImageUpload","sources":["index.vue"],"sourcesContent":["<template>\r\n  <!-- 图片上传组件 -->\r\n  <div class=\"custom-upload-images\">\r\n    <el-upload\r\n      ref=\"imageUpload\"\r\n      :action=\"uploadUrl\"\r\n      :on-preview=\"handlePictureCardPreview\"\r\n      :before-remove=\"beforeRemove\"\r\n      :on-remove=\"(file,filelist)=>{return handleImgRemove(file,filelist)}\"\r\n      :on-success=\"(res,file,filelist)=>{return uploadSuccess(res,file,filelist)}\"\r\n      :on-exceed=\"exceed\"\r\n      :on-change=\"change\"\r\n      :on-error=\"handleError\"\r\n      :limit=\"limit\"\r\n      :disabled=\"disabled\"\r\n      :multiple=\"multiple\"\r\n      :accept=\"accept\"\r\n      :show-file-list=\"showFileList\"\r\n      :data=\"data\"\r\n      :style=\"{\r\n        '--width': width,\r\n        '--height': height,\r\n        '--margin': margin\r\n      }\"\r\n      :file-list=\"files\"\r\n      :headers=\"headers\"\r\n      list-type=\"picture-card\"\r\n      :before-upload=\"beforeAvatarUpload\"\r\n    >\r\n      <i class=\"el-icon-plus\" />\r\n    </el-upload>\r\n    <el-dialog\r\n      :visible.sync=\"dialogVisible\"\r\n      :append-to-body=\"true\"\r\n    >\r\n      <img\r\n        :src=\"dialogImageUrl\"\r\n        width=\"100%\"\r\n        alt=\"图片获取失败...\"\r\n        class=\"visibleImg\"\r\n      >\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getToken } from '@/utils/auth'\r\nimport nth from 'lodash/nth'\r\nimport split from 'lodash/split'\r\nimport { Message } from 'element-ui'\r\n\r\nexport default {\r\n  props: {\r\n    // 图片上传的接口地址\r\n    action: {\r\n      type: String,\r\n      default: process.env.VUE_APP_BASE_API + '/huawei/uploadFile'\r\n    },\r\n    // 组件是否可编辑\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n\r\n    // 组件是否支持多选上传(默认不支持)\r\n    multiple: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n\r\n    // 上传图片的数量限制\r\n    limit: {\r\n      type: Number,\r\n      default: 1\r\n    },\r\n\r\n    // 允许上传的文件类型\r\n    accept: {\r\n      type: String,\r\n      default: '.jpg,.png,.jpeg'\r\n    },\r\n\r\n    // 上传按钮的宽度\r\n    width: {\r\n      type: String,\r\n      default: '100px'\r\n    },\r\n\r\n    // 上传按钮的高度\r\n    height: {\r\n      type: String,\r\n      default: '100px'\r\n    },\r\n\r\n    // 文件缩略图列表(该数组的每一项只能是字符串或者对象)\r\n    fileList: {\r\n      type: [Array, String],\r\n      default() {\r\n        return []\r\n      }\r\n    },\r\n\r\n    // 如果fileList有数组项是对象则指定对象的一个属性作为文件对象url属性值(默认是该对象的url属性表示文件路径)\r\n    fileKey: {\r\n      type: String,\r\n      default: 'url'\r\n    },\r\n\r\n    // 组件每张图片的margin值\r\n    margin: {\r\n      type: String,\r\n      default: '0px 8px 8px 0px'\r\n    },\r\n\r\n    showFileList: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n\r\n    // 上传额外带的参数\r\n    data: {\r\n      type: Object,\r\n      default() {\r\n        return {\r\n          'priFix': 'adminImage'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      baseUrl: process.env.VUE_APP_IMAGE_URL,\r\n      headers: {\r\n        'token': getToken()\r\n      }, // 上传的请求头部\r\n      dialogImageUrl: '', // 当前查看图片的路径\r\n      dialogVisible: false, // 图片查看框的显示状态\r\n      currentList: [] // 已上传的文件\r\n    }\r\n  },\r\n  computed: {\r\n    // 计算组件需要展示的文件缩略图列表数据\r\n    files() {\r\n      // 缩略图列表\r\n      const files = []\r\n\r\n      // 如果父组件没有传入缩略图列表数据\r\n      if (this.fileList.length === 0) {\r\n        return []\r\n      }\r\n\r\n      // 如果父组件没有传入缩略图列表数据\r\n      if (typeof (this.fileList) === 'string' && this.fileList === '') {\r\n        return []\r\n      }\r\n\r\n      // 若父组件传入了一个字符串作为缩略图列表的显示数据\r\n      if (typeof (this.fileList) === 'string') {\r\n        // 判断该字符串是否是由多张图片的地址拼接而成\r\n        if (this.fileList.includes(',')) {\r\n          const fileList = this.fileList.split(',')\r\n          for (const file of fileList) {\r\n            files.push(this.pathToFile(file))\r\n          }\r\n          return files\r\n        } else {\r\n          // 将其作为数组项加入数组并直接返回结果\r\n          files.push(this.pathToFile(this.fileList))\r\n          return files\r\n        }\r\n      }\r\n\r\n      // 若父组件传入缩略图列表的显示数据是一个数组\r\n      for (let item of this.fileList) {\r\n        // 判断传入的数组每一项是否是一个字符串\r\n        if (typeof (item) === 'string') {\r\n          // 将字符串转成数组(处理/单个数组项/为多张图片的地址拼接,并以逗号分隔的字符串/的情况)\r\n          item = item.split(',')\r\n          for (const file of item) {\r\n            files.push(this.pathToFile(file))\r\n          }\r\n        } else if (typeof (item) === 'object') {\r\n          // 如果数组的每一项是对象,则指定对象的一个属性作为文件对象url属性值\r\n          files.push(this.pathToFile(item[this.fileKey]))\r\n        } else {\r\n          const error = new Error()\r\n          // 数组中某些项的数据类型不正确(既不是String也不是Object)\r\n          error.message = 'Incorrect data type for some items in the array!'\r\n          throw (error)\r\n        }\r\n      }\r\n      return files\r\n    },\r\n\r\n    // 已上传的文件数量\r\n    listLength() {\r\n      return this.currentList.length\r\n    },\r\n\r\n    // 初始的文件数量\r\n    filesLength() {\r\n      console.log(this.files)\r\n      return this.files.length\r\n    },\r\n\r\n    // 图片上传的接口地址\r\n    uploadUrl() {\r\n      return this.action || `${this.baseUrl}`\r\n    }\r\n  },\r\n  watch: {\r\n    // 监听当前已上传文件的数量是否超过限制数量(控制上传按钮的显示和隐藏)\r\n    listLength: {\r\n      handler(nv, ov) {\r\n        if (nv < this.limit) {\r\n          this.$nextTick(() => {\r\n            this.showPictureCardUpload()\r\n          })\r\n        } else {\r\n          this.$nextTick(() => {\r\n            this.hidePictureCardUpload()\r\n          })\r\n        }\r\n      },\r\n      immediate: true,\r\n      deep: true\r\n    },\r\n\r\n    // 监听组件初始文件的数量是否超过限制数量(控制上传按钮的显示和隐藏)\r\n    filesLength: {\r\n      handler(nv, ov) {\r\n        if (nv < this.limit) {\r\n          this.$nextTick(() => {\r\n            this.showPictureCardUpload()\r\n          })\r\n        } else {\r\n          this.$nextTick(() => {\r\n            this.hidePictureCardUpload()\r\n          })\r\n        }\r\n      },\r\n      immediate: true,\r\n      deep: true\r\n    }\r\n  },\r\n  methods: {\r\n    handleError(errInfo, file, fileList) {\r\n      // console.log(err, file, fileList)\r\n      Message({\r\n        type: 'error',\r\n        message: `${file.name}上传失败，请稍后再试`\r\n      })\r\n    },\r\n    // 查看已选图片\r\n    handlePictureCardPreview(file) {\r\n      // 查看图片的路径(file.response也能显示，url是文件的本地路径，response是上传服务器之后接口返回的线上地址)\r\n      this.dialogImageUrl = file.url\r\n      // 显示图片查看框\r\n      this.dialogVisible = true\r\n    },\r\n\r\n    // 删除文件之前的钩子，参数为上传的文件和文件列表，若返回 false 或者返回 Promise 且被 reject，则停止删除。\r\n    beforeRemove(file, fileList) {\r\n      if (file && file.status === 'success') {\r\n        // 成功时候的方法\r\n        return this.$confirm(`确定移除 ${file.name}？`)\r\n      }\r\n    },\r\n\r\n    beforeAvatarUpload(file) {\r\n      console.log(file)\r\n      const isLt10M = file.size / 1024 / 1024 <= 10\r\n\r\n      if (!isLt10M) {\r\n        this.$message({\r\n          message: '上传文件大小不能超过10MB!',\r\n          type: 'warning'\r\n        })\r\n      }\r\n      return isLt10M\r\n    },\r\n\r\n    // 文件列表移除文件时的钩子\r\n    handleImgRemove(file, filelist) {\r\n      // 更新已上传的文件列表\r\n      this.currentList = filelist\r\n      // 通过数组对象的静态方法\"from\"得到剩余图片的线上地址(response)组成的数组\r\n      let array = Array.from(filelist, ({ response }) => response)\r\n      // response为接口返回的响应体对象时,从响应体中取出图片地址再组成数组(若接口直接返回图片地址可注释此处代码)\r\n      array = Array.from(array, ({ data }) => data)\r\n      // file:删除的文件对象; filelist:删除完成之后剩下的文件列表(删完了就是个空数组)\r\n      this.$emit('remove', array, file, filelist)\r\n      // 同时触发自定义的change事件\r\n      this.$emit('change', array, file, filelist)\r\n    },\r\n\r\n    // 上传成功\r\n    uploadSuccess(res, file, filelist) {\r\n      // 更新已上传的文件列表\r\n      this.currentList = filelist\r\n      // 通过数组对象的静态方法\"from\"得到所有图片的线上地址(response)组成的数组\r\n      let array = Array.from(filelist, ({ response }) => response)\r\n      // response为接口返回的响应体对象时,从响应体中取出图片地址再组成数组(若接口直接返回图片地址可注释此处代码)\r\n      array = Array.from(array, (response) => response?.data)\r\n      // res:后端接口的返回值; file:上传的文件对象; filelist:上传完成之后的文件列表\r\n      this.$emit('success', array, res, file, filelist)\r\n      // 同时触发自定义的change事件\r\n      this.$emit('change', array, file, filelist)\r\n    },\r\n\r\n    // 文件状态改变时的钩子，添加文件、上传成功和上传失败时都会被调用\r\n    change(file, filelist) {\r\n      // console.log(file, filelist)\r\n    },\r\n\r\n    // 上传文件超出个数限制时的钩子\r\n    exceed(files, filelist) {\r\n      this.$message.warning(`最多上传${this.limit}张图片`)\r\n    },\r\n\r\n    // 隐藏上传按钮\r\n    hidePictureCardUpload() {\r\n      const nodes = this.$refs.imageUpload.$el.childNodes\r\n      const length = nodes.length\r\n      nodes[length - 1].style.display = 'none'\r\n    },\r\n\r\n    // 显示上传按钮\r\n    showPictureCardUpload() {\r\n      const nodes = this.$refs.imageUpload.$el.childNodes\r\n      const length = nodes.length\r\n      nodes[length - 1].style.display = 'inline-flex'\r\n    },\r\n\r\n    // 将文件路径字符串转为文件对象\r\n    pathToFile(str) {\r\n      let file = {}\r\n      // 使用lodash.js提供的方法获取文件名\r\n      const fileFullName = nth(split(str, '/'), -1)\r\n      // 反解析文件名\r\n      let fileName = decodeURIComponent(nth(split(fileFullName, '.')))\r\n      fileName = fileName.replace(new RegExp(`^${this.data.preFix}\\/[0-9]{13}`), '')\r\n      // 截取文件后缀\r\n      const fileSuffix = nth(split(fileFullName, '.'), -1)\r\n      file = {\r\n        url: str,\r\n        response: { 'data': { name: fileName, url: str }},\r\n        name: `${fileName}.${fileSuffix}`,\r\n        status: 'success'\r\n      }\r\n      return file\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped deep>\r\n  .custom-upload-images {\r\n\r\n    ::v-deep .el-upload {\r\n      justify-content: center;\r\n      align-items: center;\r\n      width: var(--width);\r\n      height: var(--height);\r\n      line-height: var(--height);\r\n      box-sizing: border-box;\r\n      margin: var(--margin);\r\n    }\r\n\r\n    ::v-deep .el-upload-list__item {\r\n      width: var(--width);\r\n      height: var(--height);\r\n      line-height: var(--height);\r\n    }\r\n\r\n    /* -- 上传成功后右上角小图标样式(status-label-start) -- */\r\n    .el-upload-list__item-status-label {\r\n      position: relative;\r\n    }\r\n\r\n    ::v-deep.el-icon-upload-success {\r\n      position: absolute;\r\n      top: 0%;\r\n      left: 40%;\r\n      transform: rotate(-45deg);\r\n    }\r\n    /* -- status-label-end -- */\r\n\r\n    .visibleImg {\r\n      font-size: 16px;\r\n      color: #999999;\r\n    }\r\n  }\r\n</style>\r\n"]}]}