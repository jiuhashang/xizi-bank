{"remainingRequest":"C:\\Users\\ylf\\Desktop\\xizi - bank\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ylf\\Desktop\\xizi - bank\\src\\components\\GlobalComponents\\CustomTable\\GeneralColumn.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ylf\\Desktop\\xizi - bank\\src\\components\\GlobalComponents\\CustomTable\\GeneralColumn.vue","mtime":1642644134571},{"path":"C:\\Users\\ylf\\Desktop\\xizi - bank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1668673146435},{"path":"C:\\Users\\ylf\\Desktop\\xizi - bank\\node_modules\\babel-loader\\lib\\index.js","mtime":1668673148088},{"path":"C:\\Users\\ylf\\Desktop\\xizi - bank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1668673146435},{"path":"C:\\Users\\ylf\\Desktop\\xizi - bank\\node_modules\\vue-loader\\lib\\index.js","mtime":1668673148087}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpleHBvcnQgZGVmYXVsdCB7DQogIHByb3BzOiB7DQogICAgLyoqDQogICAgICogQGFyZ3VtZW50IHtPYmplY3R9IGNvbHVtbjog6KGo5qC85q+P5YiX55qE6YWN572u5bGe5oCn6ZuG5ZCIKOS4i+WIl+azqOmHiuacq+WwvuW4pigqKeeahOS4uuiHquWumuS5iemFjee9rumhuSzlhbbku5bliJnmmK9lbC10YWJsZeeahOWOn+Wni+mFjee9rumhuSzlhbbmnInmlYjlgLzlj6/nm7TmjqXlj4LogIPlrpjmlrnmlofmoaMpDQogICAgICogQHBhcmFtIHtCb29sZWFufFN0cmluZ30gZml4ZWQ6IOWIl+aYr+WQpuWbuuWumuWcqOW3puS+p+aIluiAheWPs+S+p++8jHRydWUg6KGo56S65Zu65a6a5Zyo5bem5L6nKHRydWUvJ2xlZnQnLydyaWdodCcpDQogICAgICogQHBhcmFtIHtCb29sZWFufSBzaG93T3ZlcmZsb3dUb29sdGlwOiDlvZPlhoXlrrnov4fplb/ooqvpmpDol4/ml7bmmL7npLogdG9vbHRpcA0KICAgICAqIEBwYXJhbSB7U3RyaW5nfSBhbGlnbjog5a+56b2Q5pa55byPKCdsZWZ0Jy8nY2VudGVyJy8ncmlnaHQnKQ0KICAgICAqIEBwYXJhbSB7b2JqZWN0fEZ1bmN0aW9ufSBmaWx0ZXI6IOiHquWumuS5ieWIl+aVsOaNrui/h+a7pOWZqCzlj6/ku6Xnm7TmjqXotYvlgLzkuLrov4fmu6Tmlrnms5UoZnVuY3Rpb24pLOS5n+WPr+S7peiuvue9ruS4uuS4gOS4quWQq+aciW1ldGhvZOWSjGFyZ3PkuKTkuKrlsZ7mgKfnmoRPYmplY3TjgIJmaWx0ZXIubWV0aG9kOui/h+a7pOaWueazlShGdW5jdGlvbik7IGZpbHRlci5hcmdzOui/h+a7pOaWueazleaJgOmcgOeahOmineWkluWPguaVsCjlvoXov4fmu6TnmoTlgLzkuI3pnIDopoHlnKhhcmdz5Lit5aOw5piOLOi/h+a7pOaWueazleS8muWwhuWFtuS9nOS4uum7mOiupOWPguaVsCkoKikNCiAgICAgKiBAcGFyYW0ge0Jvb2xlYW59IHNob3c6IOacrOWIl+aVsOaNrueahOaYvuekuueKtuaAgSh0cnVlOiDmmL7npLosIGZhbHNlOiDpmpDol48pKCopDQogICAgICogQHBhcmFtIHtTdHJpbmd9IGVtcHR5Q2VsbDog5pys5YiX56m65Y2V5YWD5qC855qE5Y2g5L2N5paH5pysKOWFgeiuuOWGmeWFpeWtl+espuS4suW9ouW8j+eahGh0bWzku6PnoIEs5pys6YWN572u6aG555qE5p2D6YeN6KaB6auY5LqO6KGo5qC85Lit6YWN572u55qEZW1wdHlDZWxsKSgqKQ0KICAgICAqLw0KICAgIGNvbHVtbjogew0KICAgICAgdHlwZTogT2JqZWN0LA0KICAgICAgZGVmYXVsdCgpIHsNCiAgICAgICAgcmV0dXJuIHt9DQogICAgICB9DQogICAgfSwNCg0KICAgIC8vIOe7hOS7tmtleQ0KICAgIGluZGV4OiB7DQogICAgICB0eXBlOiBOdW1iZXIsDQogICAgICBkZWZhdWx0OiAwDQogICAgfSwNCg0KICAgIC8vIOihqOagvOWNleWFg+agvOWGheWuueS4uuepuuaXtuaYvuekuueahOWNoOS9jeaWh+acrCjlhYHorrjlhpnlhaXlrZfnrKbkuLLlvaLlvI/nmoRodG1s5Luj56CBKQ0KICAgIGVtcHR5Q2VsbDogew0KICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgZGVmYXVsdDogJy0nDQogICAgfQ0KICB9LA0KICBjb21wdXRlZDogew0KICAgIC8vIOacrOWIl+aVsOaNrueahOaYvuekuueKtuaAgSh0cnVlOiDmmL7npLosIGZhbHNlOiDpmpDol48pDQogICAgc2hvdygpIHsNCiAgICAgIHJldHVybiB0aGlzLmNvbHVtbi5zaG93ID09PSB1bmRlZmluZWQgPyB0cnVlIDogdGhpcy5jb2x1bW4uc2hvdw0KICAgIH0sDQoNCiAgICAvLyDliJfmmK/lkKblm7rlrprlnKjlt6bkvqfmiJbogIXlj7PkvqfvvIx0cnVlIOihqOekuuWbuuWumuWcqOW3puS+pyh0cnVlLCBsZWZ0LCByaWdodCkNCiAgICBmaXhlZCgpIHsNCiAgICAgIHJldHVybiB0aGlzLmNvbHVtbi5maXhlZCB8fCBmYWxzZQ0KICAgIH0sDQoNCiAgICAvLyDlr7npvZDmlrnlvI8obGVmdC9jZW50ZXIvcmlnaHQpDQogICAgYWxpZ24oKSB7DQogICAgICByZXR1cm4gdGhpcy5jb2x1bW4uYWxpZ24gfHwgJ2NlbnRlcicNCiAgICB9LA0KDQogICAgLy8g6Ieq5a6a5LmJ6L+H5ruk5ZmoDQogICAgZmlsdGVyKCkgew0KICAgICAgcmV0dXJuICh2YWx1ZSwgYXJncykgPT4gew0KICAgICAgICAvLyDlsJ3or5XmiafooYx0aGlzLmNvbHVtbuS4rWZpbHRlcuWxnuaAp+eahG1ldGhvZA0KICAgICAgICB0cnkgew0KICAgICAgICAgIC8vIOiLpWZpbHRlcuWxnuaAp+S4reeahGFyZ3PkuLrmlbDnu4TlvaLlvI/nmoTlpJrkuKrlj4LmlbANCiAgICAgICAgICBpZiAoYXJncyAmJiBBcnJheS5pc0FycmF5KGFyZ3MpKSB7DQogICAgICAgICAgICAvLyDlsIZhcmdz5bGV5byA5ZCO5YaN5Lyg5YWl6L+H5ruk5pa55rOVDQogICAgICAgICAgICByZXR1cm4gdGhpcy5jb2x1bW4uZmlsdGVyLm1ldGhvZCh2YWx1ZSwgLi4uYXJncykNCiAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29sdW1uLmZpbHRlci5tZXRob2QodmFsdWUsIGFyZ3MpDQogICAgICAgICAgfQ0KICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgIC8vIOiLpWZpbHRlcuWxnuaAp+ayoeacieWjsOaYjm1ldGhvZCzliJnnm7TmjqXmiafooYxmaWx0ZXLlsZ7mgKcs6K+l5oOF5Ya15LiL5LiN5a2Y5ZyoYXJnc++8iOS+i+Wmgntwcm9wOnh4LCBsYWJlbDp4eCwgZmlsdGVyOiB7YXJnczp4eHh9feaYr+aXoOaViOeahOiuvue9ru+8iQ0KICAgICAgICAgIHJldHVybiB0aGlzLmNvbHVtbi5maWx0ZXIodmFsdWUpDQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9LA0KDQogICAgLy8g5pmu6YCa5pWw5o2u5YiX55qE5pi+56S654q25oCBDQogICAgc2hvd0dlbmVyYWxDb2x1bW4oKSB7DQogICAgICAvLyDlvZPliY3liJfnmoTmmL7npLrnirbmgIHooqvorr7nva7kuLpmYWxzZQ0KICAgICAgaWYgKCF0aGlzLnNob3cpIHsNCiAgICAgICAgcmV0dXJuIGZhbHNlDQogICAgICB9DQogICAgICAvLyDnibnmrormlbDmja7liJcNCiAgICAgIGNvbnN0IHNwZWNpYWxDb2x1bW5zID0gWydzZWxlY3Rpb24nXQ0KICAgICAgaWYgKHNwZWNpYWxDb2x1bW5zLnNvbWUodiA9PiB7DQogICAgICAgIHJldHVybiB2ID09PSB0aGlzLmNvbHVtbi50eXBlDQogICAgICB9KSkgew0KICAgICAgICAvLyDlvZPliY3mlbDmja7liJfnsbvlnovmmK/nibnmrornsbvlnovml7bkuI3mmL7npLrmma7pgJrmlbDmja7liJcNCiAgICAgICAgcmV0dXJuIGZhbHNlDQogICAgICB9DQogICAgICByZXR1cm4gdHJ1ZQ0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIC8vIOWvueWkmuWxgueahHByb3Dov5vooYzlpITnkIYNCiAgICBnZXRWYWx1ZShfa2V5LCBwcm9wKSB7DQogICAgICBpZiAocHJvcCkgew0KICAgICAgICBjb25zdCBhcnIgPSBwcm9wLnNwbGl0KCcuJykNCiAgICAgICAgaWYgKGFyci5sZW5ndGggPiAxKSB7DQogICAgICAgICAgYXJyLmZvckVhY2goaXRlbSA9PiB7DQogICAgICAgICAgICBfa2V5ID0gZ2V0VmFsKF9rZXksIGl0ZW0pDQogICAgICAgICAgfSkNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICByZXR1cm4gX2tleVtwcm9wXQ0KICAgICAgICB9DQogICAgICAgIHJldHVybiBfa2V5DQogICAgICB9IGVsc2Ugew0KICAgICAgICByZXR1cm4gJycNCiAgICAgIH0NCiAgICAgIGZ1bmN0aW9uIGdldFZhbChhLCBiKSB7DQogICAgICAgIHJldHVybiBhW2JdIHx8ICcnDQogICAgICB9DQogICAgfSwNCg0KICAgIC8vIOWkhOeQhuWbvueJh+S4iuS8oOWIl+eahOS4iuS8oOe7k+aenA0KICAgIGNoYW5nZShlLCByb3csIHByb3ApIHsNCiAgICAgIC8vIOWwhuWbvueJh+S4iuS8oOeahOe7k+aenCjlm77niYflnLDlnYAp6LWL5YC857uZ6KGM5pWw5o2u5Lit5a+55bqU55qE5bGe5oCnDQogICAgICAvLyBjb25zb2xlLmxvZyhlLCByb3csIHByb3ApDQogICAgICByb3dbcHJvcF0gPSBlWzBdDQogICAgfSwNCg0KICAgIC8vIOWNleWFg+agvOWGheeahOi+k+WFpeahhuWkseWOu+eEpueCueaXtuinpuWPkQ0KICAgIGhhbmRsZUNlbGxFZGl0KGUsIHJvdywgY29sdW1uKSB7DQogICAgICAvLyBjb25zb2xlLmxvZyhlLnRhcmdldC52YWx1ZSwgcm93LCBjb2x1bW4pDQogICAgICB0aGlzLiRlbWl0KCdjZWxsSW5wdXRCbHVyJywgeyBlLCByb3csIGNvbHVtbiB9KQ0KICAgIH0sDQoNCiAgICAvLyDlvZPliY3ooYzmlbDmja7kuLrli77pgInnirbmgIHnmoTml7blgJnvvIznpoHnlKjkv67mlLnku7fmoLznmoRpbnB1dOi+k+WFpeahhijkuZ/lsLHmmK9jbG91bW4ucHJvcCA9PT0gJ3ByaWNlJykNCiAgICBkaXNhYmxlZElucHV0KHJvdywgcHJvcCkgew0KICAgICAgLy8gY29uc29sZS5sb2cocm93LCBwcm9wKQ0KICAgICAgaWYgKHByb3AgPT09ICdwcmljZScpIHsNCiAgICAgICAgLy8gY2hlY2tlZOS9nOS4uua0u+WKqOWVhuWTgSLli77pgInnirbmgIEi5a2X5q61KDA65pyq5Yu+6YCJLDE65bey5Yu+6YCJKQ0KICAgICAgICBpZiAocm93LmNoZWNrZWQgPT09IDApIHsNCiAgICAgICAgICByZXR1cm4gZmFsc2UNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICByZXR1cm4gdHJ1ZQ0KICAgICAgICB9DQogICAgICB9DQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["GeneralColumn.vue"],"names":[],"mappings":";AA0EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GeneralColumn.vue","sourceRoot":"src/components/GlobalComponents/CustomTable","sourcesContent":["<template>\r\n  <!-- 普通数据列 -->\r\n  <el-table-column\r\n    v-if=\"showGeneralColumn\"\r\n    :prop=\"column.prop\"\r\n    :label=\"column.label\"\r\n    :width=\"column.width\"\r\n    :sortable=\"column.sortable\"\r\n    :show-overflow-tooltip=\"column.showOverflowTooltip\"\r\n    :fixed=\"fixed\"\r\n    :align=\"align\"\r\n    :formatter=\"column.formatter\"\r\n    :type=\"column.type\"\r\n    class=\"columns\"\r\n  >\r\n    <template slot-scope=\"scope\">\r\n      <!-- 如果非空单元格(内容数据不为undefined,null,''等,内容为0的情况不算)配置了filter,则显示该部分内容 -->\r\n      <span v-if=\"(Boolean(getValue(scope.row,column.prop)) || typeof(getValue(scope.row,column.prop)) === 'number' || typeof (getValue(scope.row,column.prop)) === 'boolean') && column.filter\">\r\n        {{ filter(getValue(scope.row,column.prop), column.filter.args) }}\r\n      </span>\r\n\r\n      <!-- column的type设置为upload时,单元格内显示图片上传组件 -->\r\n      <!-- fileList 接受的数据是Array,所以赋值时先判断getValue(scope.row,column.prop)是否有值，如果有值设置为数组-->\r\n      <image-upload\r\n        v-else-if=\"column.type === 'upload'\"\r\n        :key=\"scope.row.id\"\r\n        :file-list=\"getValue(scope.row,column.prop) ? [getValue(scope.row,column.prop)] : getValue(scope.row,column.prop)\"\r\n        width=\"60px\"\r\n        height=\"60px\"\r\n        margin=\"0px\"\r\n        @change=\"change($event, scope.row, column.prop)\"\r\n      />\r\n\r\n      <!-- column的type设置为edit时,单元格内显示输入框 -->\r\n      <el-input\r\n        v-else-if=\"column.type === 'edit'\"\r\n        v-model=\"scope.row[column.prop]\"\r\n        :disabled=\"disabledInput(scope.row, column.prop)\"\r\n        @blur=\"handleCellEdit($event,scope.row, scope.column)\"\r\n      />\r\n\r\n      <!-- column的type设置为image时,单元格内显示图片 -->\r\n      <el-image\r\n        v-else-if=\"column.type === 'image'\"\r\n        :src=\"getValue(scope.row,column.prop)\"\r\n        :preview-src-list=\"[getValue(scope.row,column.prop)]\"\r\n        class=\"image-cell\"\r\n        alt=\"暂无图片...\"\r\n      />\r\n\r\n      <!-- 没有对column配置filter的,列类型也不是'upload'的,则展示原始数据 -->\r\n      <span v-else>{{ getValue(scope.row,column.prop) }}</span>\r\n\r\n      <!-- 全表空单元格占位内容(单元格内容为数字0时不视为空单元格);表格配置项（绑定在table上的配置属性）中声明了emptyCell内容,则显示该部分内容 -->\r\n      <span\r\n        v-show=\"(!Boolean(getValue(scope.row,column.prop)) && typeof(getValue(scope.row,column.prop)) !== 'number' && typeof(getValue(scope.row,column.prop)) !== 'boolean') && emptyCell && !column.emptyCell\"\r\n        v-html=\"emptyCell\"\r\n      >\r\n        {{ emptyCell }}\r\n      </span>\r\n\r\n      <!-- 单列空单元格占位内容(单元格内容为数字0时不视为空单元格);column配置项(下面props里面传入的)中声明了emptyCell内容,则显示该部分内容 -->\r\n      <span\r\n        v-show=\"(!Boolean(getValue(scope.row,column.prop)) && typeof(getValue(scope.row,column.prop)) !== 'number' && typeof(getValue(scope.row,column.prop)) !== 'boolean') && column.emptyCell\"\r\n        v-html=\"column.emptyCell\"\r\n      >\r\n        {{ column.emptyCell }}\r\n      </span>\r\n\r\n    </template>\r\n  </el-table-column>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    /**\r\n     * @argument {Object} column: 表格每列的配置属性集合(下列注释末尾带(*)的为自定义配置项,其他则是el-table的原始配置项,其有效值可直接参考官方文档)\r\n     * @param {Boolean|String} fixed: 列是否固定在左侧或者右侧，true 表示固定在左侧(true/'left'/'right')\r\n     * @param {Boolean} showOverflowTooltip: 当内容过长被隐藏时显示 tooltip\r\n     * @param {String} align: 对齐方式('left'/'center'/'right')\r\n     * @param {object|Function} filter: 自定义列数据过滤器,可以直接赋值为过滤方法(function),也可以设置为一个含有method和args两个属性的Object。filter.method:过滤方法(Function); filter.args:过滤方法所需的额外参数(待过滤的值不需要在args中声明,过滤方法会将其作为默认参数)(*)\r\n     * @param {Boolean} show: 本列数据的显示状态(true: 显示, false: 隐藏)(*)\r\n     * @param {String} emptyCell: 本列空单元格的占位文本(允许写入字符串形式的html代码,本配置项的权重要高于表格中配置的emptyCell)(*)\r\n     */\r\n    column: {\r\n      type: Object,\r\n      default() {\r\n        return {}\r\n      }\r\n    },\r\n\r\n    // 组件key\r\n    index: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n\r\n    // 表格单元格内容为空时显示的占位文本(允许写入字符串形式的html代码)\r\n    emptyCell: {\r\n      type: String,\r\n      default: '-'\r\n    }\r\n  },\r\n  computed: {\r\n    // 本列数据的显示状态(true: 显示, false: 隐藏)\r\n    show() {\r\n      return this.column.show === undefined ? true : this.column.show\r\n    },\r\n\r\n    // 列是否固定在左侧或者右侧，true 表示固定在左侧(true, left, right)\r\n    fixed() {\r\n      return this.column.fixed || false\r\n    },\r\n\r\n    // 对齐方式(left/center/right)\r\n    align() {\r\n      return this.column.align || 'center'\r\n    },\r\n\r\n    // 自定义过滤器\r\n    filter() {\r\n      return (value, args) => {\r\n        // 尝试执行this.column中filter属性的method\r\n        try {\r\n          // 若filter属性中的args为数组形式的多个参数\r\n          if (args && Array.isArray(args)) {\r\n            // 将args展开后再传入过滤方法\r\n            return this.column.filter.method(value, ...args)\r\n          } else {\r\n            return this.column.filter.method(value, args)\r\n          }\r\n        } catch (error) {\r\n          // 若filter属性没有声明method,则直接执行filter属性,该情况下不存在args（例如{prop:xx, label:xx, filter: {args:xxx}}是无效的设置）\r\n          return this.column.filter(value)\r\n        }\r\n      }\r\n    },\r\n\r\n    // 普通数据列的显示状态\r\n    showGeneralColumn() {\r\n      // 当前列的显示状态被设置为false\r\n      if (!this.show) {\r\n        return false\r\n      }\r\n      // 特殊数据列\r\n      const specialColumns = ['selection']\r\n      if (specialColumns.some(v => {\r\n        return v === this.column.type\r\n      })) {\r\n        // 当前数据列类型是特殊类型时不显示普通数据列\r\n        return false\r\n      }\r\n      return true\r\n    }\r\n  },\r\n  methods: {\r\n    // 对多层的prop进行处理\r\n    getValue(_key, prop) {\r\n      if (prop) {\r\n        const arr = prop.split('.')\r\n        if (arr.length > 1) {\r\n          arr.forEach(item => {\r\n            _key = getVal(_key, item)\r\n          })\r\n        } else {\r\n          return _key[prop]\r\n        }\r\n        return _key\r\n      } else {\r\n        return ''\r\n      }\r\n      function getVal(a, b) {\r\n        return a[b] || ''\r\n      }\r\n    },\r\n\r\n    // 处理图片上传列的上传结果\r\n    change(e, row, prop) {\r\n      // 将图片上传的结果(图片地址)赋值给行数据中对应的属性\r\n      // console.log(e, row, prop)\r\n      row[prop] = e[0]\r\n    },\r\n\r\n    // 单元格内的输入框失去焦点时触发\r\n    handleCellEdit(e, row, column) {\r\n      // console.log(e.target.value, row, column)\r\n      this.$emit('cellInputBlur', { e, row, column })\r\n    },\r\n\r\n    // 当前行数据为勾选状态的时候，禁用修改价格的input输入框(也就是cloumn.prop === 'price')\r\n    disabledInput(row, prop) {\r\n      // console.log(row, prop)\r\n      if (prop === 'price') {\r\n        // checked作为活动商品\"勾选状态\"字段(0:未勾选,1:已勾选)\r\n        if (row.checked === 0) {\r\n          return false\r\n        } else {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.image-cell {\r\n  width: 60px;\r\n  height: 60px;\r\n  color: #cccccc;\r\n}\r\n</style>\r\n"]}]}